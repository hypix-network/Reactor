
import lombok.Getter;

import dev.hypix.dataparser.util.CopyOnWriteCollection;

@Getter
public final class Material {
    
    public static final CopyOnWriteCollection<Material> ALL = new CopyOnWriteCollection<>({ALL_FIELD});
    public static final Material[] EMPTY_ARRAY = new Material[] { Material.AIR };

    public static final short UNBREAKABLE = -1;

    private final char id;
    private final byte stackSize;
    private final short maxDurability;
    private final String name;

    public Material(int stackSize, int maxDurability, String name, int id) {
        this.id = (char)id;
        this.stackSize = (byte)stackSize;
        this.maxDurability = (short) ((maxDurability <= 0) ? UNBREAKABLE : maxDurability);
        this.name = name;
    }

    private Material(int id, int stackSize, int maxDurability, String name) {
        this(stackSize, maxDurability, name, id);
        ALL.add(this);
    }

    public static Material byId(final int id) {
        return (id < 0 || id >= ALL.size()) ? Material.AIR : ALL.getArray()[id];
    }

    public static Material[] byIds(final char... ids) {
        if (ids.length == 1 && ids[0] == 0) {
            return EMPTY_ARRAY;
        }
        final Material[] array = new Material[ids.length];
        int index = 0;
        for (final int id : ids) {
            array[index++] = byId(id);
        }
        return array;
    }

    @Override
    public int hashCode() {
        return id;
    }

    @Override
    public boolean equals(final Object object) {
        return object == this || (object instanceof Material material && material.id == this.id);
    }

    public static final Material {OBJECT_FIELD_TYPE};
}